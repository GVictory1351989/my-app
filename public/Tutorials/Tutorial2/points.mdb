Primitive data types in JavaScript include:

Numbers - Integers, floats
Strings - Any data under single quote, double quote or backtick quote
Booleans - true or false value
Null - empty value or no value
Undefined - a declared variable without a value
Symbol - A unique value that can be generated by Symbol constructor


Non-primitive data types in JavaScript includes:

Objects
Arrays

`toUpperCase()` / `toLowerCase()`
  string ko upper case yaa lower case mein badalta hain 

`substr(index, length)`
  string ka substring leta hain index se length tak 
  'JavaScript'.substr(4,6) // Script

`substring(start, end)`
🔹 Start से लेके end-1 तक का हिस्सा return करता है।
`split(separator)`

🔹 String को array में तोड़ता है।

```js
'30 Days Of JS'.split(' ')   // ["30", "Days", "Of", "JS"]
'Asabeneh'.split('')         // ["A","s","a","b","e","n","e","h"]
```
`trim()`

🔹 Start और end के spaces हटाता है।

```js
'  Hello  '.trim()   // 'Hello'
```

## 🟩 6. `includes(substring)`

🔹 Substring मौजूद है या नहीं – `true/false`

```js
'JavaScript'.includes('Script')  // true
```

---

## 🟩 7. `replace(old, new)`

🔹 Substring को नए से replace करता है।

```js
'JS is bad'.replace('bad','good') // JS is good
```

---

## 🟩 8. `charAt(index)` / `charCodeAt(index)`

🔹 Char देता है या उसका ASCII number

```js
'JavaScript'.charAt(0)       // J
'JavaScript'.charCodeAt(3)   // 97 (a)
```

---

## 🟩 9. `indexOf()` / `lastIndexOf()`

🔹 First ya last matching index देता है। नहीं मिला तो -1

```js
'I love JS'.indexOf('love')        // 2
'I love JS. JS is cool'.lastIndexOf('JS') // 10
```

---

## 🟩 10. `concat()`

🔹 Strings को जोड़ता है।

```js
'30'.concat('Days','Of','JS')  // 30DaysOfJS
```

---

## 🟩 11. `startsWith()` / `endsWith()`

🔹 String की शुरुआत या अंत को check करता है।

```js
'Finland'.startsWith('Fin')   // true
'Finland'.endsWith('land')    // true
```

---

## 🟩 12. `search()`

🔹 Index return करता है match का (string ya regex)

```js
'I love JS'.search('love')    // 2
```

---

## 🟩 13. `match()`

🔹 Substring matches को array में return करता है

```js
'JS is fun'.match(/js/gi) // ['JS']
```

---

## 🟩 14. `repeat(n)`

🔹 String को n बार दोहराता है।

```js
'love'.repeat(3) // lovelovelove
```

---

## 🎁 Bonus – Digits निकालना:

```js
let txt = 'In 2020, I ran 30 Days'
txt.match(/\d+/g)  // ['2020', '30']
```

---

### 📄 Ready to Download?

PDF version chahiye to bataiye – turant bana ke de dunga.

Next: `padStart`, `padEnd`, `localeCompare` etc. bhi chahiye kya?
Function	Use
typeof	Data type check
parseInt()	String/Float ➜ Integer
parseFloat()	String ➜ Float
Number()	String ➜ Number (int or float)
+value	Quick convert to Number